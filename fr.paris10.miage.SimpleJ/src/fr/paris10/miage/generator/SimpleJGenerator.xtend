/*
 * generated by Xtext 2.10.0
 */
package fr.paris10.miage.generator

import org.eclipse.emf.ecore.resource.Resource
import org.eclipse.xtext.generator.AbstractGenerator
import org.eclipse.xtext.generator.IFileSystemAccess2
import org.eclipse.xtext.generator.IGeneratorContext
import fr.paris10.miage.simpleJ.Classe

/**
 * Generates code from your model files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
class SimpleJGenerator extends AbstractGenerator {

	override void doGenerate(Resource resource, IFileSystemAccess2 fsa, IGeneratorContext context) {
//		fsa.generateFile('greetings.txt', 'People to greet: ' + 
//			resource.allContents
//				.filter(typeof(Greeting))
//				.map[name]
//				.join(', '))

		val classes = resource.allContents.filter(typeof(Classe)).map[name].toSet;
		for(String nom : classes) {
			fsa.generateFile(nom + ".java", genererJava(nom));
		}
	}
	
	//Template de nos pages html
	def genererJava(String nom) '''
	public class «nom» {
	}
	'''
}
