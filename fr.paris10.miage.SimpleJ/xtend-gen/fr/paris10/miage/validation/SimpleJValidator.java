/**
 * generated by Xtext 2.10.0
 */
package fr.paris10.miage.validation;

import fr.paris10.miage.simpleJ.Attribut;
import fr.paris10.miage.simpleJ.Classe;
import fr.paris10.miage.simpleJ.SimpleJPackage;
import fr.paris10.miage.validation.AbstractSimpleJValidator;
import org.eclipse.xtext.validation.Check;
import org.eclipse.xtext.validation.CheckType;

/**
 * This class contains custom validation rules.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#validation
 */
@SuppressWarnings("all")
public class SimpleJValidator extends AbstractSimpleJValidator {
  public final static String ERROR_NAME = "invalidName";
  
  @Check(CheckType.FAST)
  public void checkClassStartWithUpper(final Classe classe) {
    String _name = classe.getName();
    char _charAt = _name.charAt(0);
    boolean _isUpperCase = Character.isUpperCase(_charAt);
    boolean _not = (!_isUpperCase);
    if (_not) {
      this.warning("Le nom d\'une classe doit commencer par une majuscule !", SimpleJPackage.Literals.CLASSE__NAME, SimpleJValidator.ERROR_NAME);
    }
  }
  
  @Check(CheckType.FAST)
  public void checkClassStartWithLower(final Attribut attribut) {
    String _name = attribut.getName();
    char _charAt = _name.charAt(0);
    boolean _isUpperCase = Character.isUpperCase(_charAt);
    if (_isUpperCase) {
      this.warning("Le nom d\'un attribut doit commencer par une minuscule !", SimpleJPackage.Literals.ATTRIBUT__NAME, SimpleJValidator.ERROR_NAME);
    }
  }
  
  @Check(CheckType.NORMAL)
  public void checkAttibutType(final Attribut attribut) {
    if (((((!attribut.getType().getName().equals("boolean")) || (!attribut.getType().getName().equals("int"))) || (!attribut.getType().getName().equals("String"))) || (!attribut.getType().getName().equals("double")))) {
      this.error("Type inconnu !", SimpleJPackage.Literals.ATTRIBUT__NAME, SimpleJValidator.ERROR_NAME);
    }
  }
}
